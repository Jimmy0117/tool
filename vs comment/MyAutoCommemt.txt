Imports System
Imports EnvDTE
Imports EnvDTE80
Imports EnvDTE90
Imports System.Diagnostics

Public Module MyAutoCommemt  '这里要与保存的Module文件名保持一致，不然无法调用宏'
    ' --------------------------------------------------
    ' 生成文件说明注释
    ' --------------------------------------------------
    Sub FileDescription()
        Dim gAuthor As String = "Jimmy"
        Dim gCompany As String = "Company"

        Dim outTextDoc As TextDocument
        Dim outText As EditPoint

        DTE.ActiveDocument.Selection.GotoLine(1)
        outTextDoc = DTE.ActiveDocument.Object("TextDocument")
        outText = outTextDoc.StartPoint.CreateEditPoint()
        outText.Insert("/***************************************************************" + vbCrLf)
        outText.Insert(" * Copyright(C) " + Date.Today.Year.ToString() + "," + gCompany + " All Rights Reserved" + vbCrLf)
        outText.Insert(" * " + vbCrLf)
        outText.Insert(" * @file    : " + DTE.ActiveDocument.Name + vbCrLf)
        outText.Insert(" * " + vbCrLf)
        outText.Insert(" * @brief   : " + vbCrLf)
        outText.Insert(" * " + vbCrLf)
        outText.Insert(" * @version : 1.0" + vbCrLf)
        outText.Insert(" * " + vbCrLf)
        outText.Insert(" * @author  : " + gAuthor + vbCrLf)
        outText.Insert(" * " + vbCrLf)
        outText.Insert(" * @date    : " + Date.Today + vbCrLf)
        outText.Insert(" * " + vbCrLf)
        outText.Insert(" * Details  :" + vbCrLf)
        outText.Insert(" ***************************************************************/" + vbCrLf)
        DTE.ActiveDocument.Selection.GotoLine(10)
    End Sub



    ' --------------------------------------------------
    '
    ' 函数注释解析部分
    '
    ' --------------------------------------------------
    Public Structure ITEMDATA
        Public itemType As Integer
        Public itemText As String
    End Structure
    Public lItemList As New System.Collections.Generic.List(Of ITEMDATA)(4)
    Private Function ParseFunctionDescription(ByVal funText As String) As Boolean
        Dim strItem As String
        Dim idata As ITEMDATA
        Dim strSplit As String() = funText.Split("(")

        If strSplit.Length = 1 Then
            Return False
        End If

        '解析函数名称部分
        If strSplit.Length > 2 Then
            strItem = strSplit(strSplit.Length - 2).Trim()
        Else
            strItem = strSplit(0).Trim()
        End If
        Dim strHeadSplit As String() = strItem.Split(" ")
        strItem = strHeadSplit(strHeadSplit.Length - 1).Trim()
        idata.itemType = 1
        idata.itemText = strItem.Trim()
        lItemList.Add(idata)

        '解析参数部分
        strItem = strSplit(strSplit.Length - 1).Trim()
        If strItem.Substring(0, 1) <> ")" Then
            Dim iend As Integer = strItem.IndexOf(")", 0)
            Dim strParams As String = strItem.Substring(0, iend).Trim()
            Dim strParamSplit As String() = strParams.Split(",")
            For Each strItem In strParamSplit
                idata.itemType = 2
                idata.itemText = strItem.Trim()
                lItemList.Add(idata)
            Next strItem
        Else
            idata.itemType = 2
            idata.itemText = "none"
            lItemList.Add(idata)
        End If
        '解析返回值类型
        Dim iIndex As Integer
        For iIndex = 0 To strHeadSplit.Length - 2
            idata.itemType = 3
            idata.itemText = strHeadSplit(iIndex).Trim()
            lItemList.Add(idata)
        Next iIndex
        Return True
    End Function


    Sub AddComment()
        Dim DocSel As EnvDTE.TextSelection
        DocSel = DTE.ActiveDocument.Selection
        DocSel.EndOfLine()
        ActiveDocument.Selection.Text = " /*    */"
    End Sub

    ' --------------------------------------------------
    '
    ' 根据函数声明生成注释
    '
    ' --------------------------------------------------
    Sub FunctionRemark()
        Dim preSpaceCount As Integer = 0   ' 注释前面的空格数, 缩进（单位：字符）
        Dim outTextDoc As TextDocument
        Dim outText As EditPoint
        Dim iCurrentLineNumber As Integer
        Dim iLineLength As Integer
        Dim strFunText As String
        Dim iItemIndex As Integer
        Dim idata As ITEMDATA

        lItemList.Clear()

        iCurrentLineNumber = DTE.ActiveDocument.Selection.CurrentLine.ToString()
        outTextDoc = DTE.ActiveDocument.Object("TextDocument")
        outText = outTextDoc.StartPoint.CreateEditPoint()
        ' 移动文本输入点到指定行上
        outText.MoveToLineAndOffset(iCurrentLineNumber, 1)
        iLineLength = outText.LineLength
        strFunText = outText.GetText(iLineLength)
        iLineLength = strFunText.Trim().Length
        '但前行没有内容直接返回
        If iLineLength = 0 Then
            Return
        End If

        ' 解析函数名称
        Dim bResult As Boolean = ParseFunctionDescription(strFunText.Trim())
        If bResult = False Then
            lItemList.Clear()
            Return
        End If

        Dim pcount As Integer = 0
        Dim rcount As Integer = 0
        Dim strSpace As String = ""
        Dim iSpaceIndex As Integer
        For iSpaceIndex = 1 To preSpaceCount
            strSpace = strSpace + " "
        Next
        outText.Insert(strSpace + "/**************************************************************" + vbCrLf)

        For iItemIndex = 0 To lItemList.Count - 1
            idata = lItemList.Item(iItemIndex)
            Select Case idata.itemType
                Case 1
                    outText.Insert(strSpace + "*  @brief : " + idata.itemText + vbCrLf)

                    outText.Insert(strSpace + "*     " + vbCrLf)

                Case 2

                    If idata.itemText = "none" Then
                        outText.Insert(strSpace + "*  @param : -none" + vbCrLf)
                        outText.Insert(strSpace + "*     " + vbCrLf)

                    Else
                        If pcount = 0 Then
                            outText.Insert(strSpace + "*  @param : " + vbCrLf)
                            outText.Insert(strSpace + "*     " + vbCrLf)
                        End If
                        pcount = pcount + 1
                        outText.Insert(strSpace + "*    -" + idata.itemText + vbCrLf)
                        outText.Insert(strSpace + "*     " + vbCrLf)
                    End If

                Case 3
                    If rcount = 0 Then
                        outText.Insert(strSpace + "*  @return : " + idata.itemText + vbCrLf)
                        outText.Insert(strSpace + "*     " + vbCrLf)
                    End If
                    rcount = rcount + 1
                Case 4
                Case 5
            End Select
        Next

        outText.Insert(strSpace + "*  @author : " + "Jimmy" + vbCrLf)
        outText.Insert(strSpace + "*     " + vbCrLf)
        outText.Insert(strSpace + "*  @date : " + Date.Today + vbCrLf)
        outText.Insert(strSpace + "*     " + vbCrLf)
        outText.Insert(strSpace + "*  @note : " + vbCrLf)
        outText.Insert(strSpace + "***************************************************************/" + vbCrLf)

        lItemList.Clear()   '清楚所有元素
    End Sub



End Module

